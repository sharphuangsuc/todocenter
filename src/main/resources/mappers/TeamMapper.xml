<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cvte.todocenter.mapper.TeamMapper">

    <resultMap id="userMap" type="com.cvte.todocenter.bean.User">
        <id column="user_id" property="userId"/>
        <result column="user_name" property="userName"/>
        <result column="email" property="email"/>
        <result column="is_delete" property="isDelete"/>
        <result column="last_ope_time" property="lastOpeTime"/>
        <result column="operation" property="operation"/>
    </resultMap>

    <resultMap id="teamMap" type="com.cvte.todocenter.bean.Team">
        <id column="team_id" property="teamId"/>
        <result column="team_name" property="teamName"/>
        <result column="is_delete" property="isDelete"/>
        <result column="last_ope_time" property="lastOpeTime"/>
        <result column="operation" property="operation"/>
    </resultMap>

    <insert id="insertTeam" parameterType="com.cvte.todocenter.bean.Team" useGeneratedKeys="true" keyProperty="teamId">
        insert into team(team_name,is_delete,last_ope_time,operation)
        values (#{teamName},0,#{lastOpeTime},#{operation})
    </insert>

    <select id="selectAll" resultMap="teamMap">
        select team_id,team_name from team
        where is_delete!=1
    </select>

    <update id="deleteTeamById">
        update team set is_delete=1,last_ope_time=#{lastOpeTime},operation=#{operation}
        where team_id=#{teamId}
    </update>

    <select id="selectTeamById" parameterType="int" resultMap="teamMap">
        select team_id,team_name from team
        where team_id=#{teamId} and is_delete!=1
    </select>

    <update id="updateTeamById" parameterType="com.cvte.todocenter.bean.Team">
        update team
        <set>
            <if test="teamName!=null">
                team_name=#{teamName}
            </if>
            <if test="isDelete!=null">
                is_delete=#{isDelete}
            </if>
            last_ope_time=#{lastOpeTime},operation=#{operation}
            where team_id=#{teamId}
        </set>
    </update>

    <select id="selectTeamByName" parameterType="java.lang.String" resultMap="teamMap">
        select teamId,teamName from team
        where team_name=#{teamName} and is_delete!=1
    </select>

    <select id="selectAllDelTeam" resultMap="teamMap">
        select team_id,team_name from team
        where is_delete=1
    </select>

    <update id="batchDeleteTeam" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" separator=";">
            update team
            <set>
                is_delete=1,last_ope_time=#{lastOpeTime},operation=#{operation}
            </set>
            where team_id=${item}
        </foreach>
    </update>

    <insert id="insertTeamUser" parameterType="java.util.List">
        insert into user_team(user_id,team_id,is_delete)
        values
        <foreach collection="list" item="item" separator=",">
             (#{item.userId},#{item.teamId},0)
        </foreach>
    </insert>

    <update id="deleteTeamUserById" parameterType="int">
        update user_team set isDelete=1
        where userId=#{userId} and teamId=#{teamId}
    </update>

    <select id="selectAllTeamUser" resultMap="userMap" parameterType="int">
        select userId,userName,email
        from user
        where userId in
        (select userId from user_team where teamId=#{teamId})
    </select>

</mapper>